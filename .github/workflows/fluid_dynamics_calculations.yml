name: Fluid Dynamics Calculations Pipeline

on:
  push:
    branches:
      - "**"  # Triggers on any branch
  workflow_dispatch:

jobs:
  fluid_dynamics_calculations:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    - name: Read Input Data
      run: cat data/testing-input-output/boundary_conditions.json

    # ‚úÖ Step: Delete Previous Boundary Conditions Output If Exists
    - name: Delete Previous Boundary Conditions Output
      run: |
        if [ -f data/testing-input-output/boundary_conditions.json ]; then
          rm data/testing-input-output/boundary_conditions.json
          echo "üóëÔ∏è Deleted previous boundary_conditions.json file."
        else
          echo "‚ÑπÔ∏è No previous boundary_conditions.json found‚Äîproceeding with new calculations."
        fi

    - name: Run Fluid Dynamics Calculations
      run: |
        python src/process_fluid_dynamics.py data/testing-input-output/boundary_conditions.json

    - name: Verify Output File Exists
      run: |
        if [ -f data/testing-input-output/boundary_conditions.json ]; then
          echo "‚úÖ Boundary conditions output successfully created."
        else
          echo "‚ùå Error: Boundary conditions output file not found!" && exit 1
        fi

    # ‚úÖ Run Unit & Integration Tests Separately
    - name: Run unit tests  
      run: pytest tests/test_unit_validation.py --verbose  

    - name: Run output validation tests  
      run: pytest tests/test_output_validation.py --verbose

    - name: Run integration tests  
      run: pytest tests/test_integration_validation.py --verbose

    - name: Run performance tests  
      run: pytest tests/test_performance_testing.py --verbose

    # ‚úÖ Commit and Push Updated Boundary Conditions Output (Only If Tests Passed)
    - name: Commit and Push Boundary Conditions JSON
      env:
        GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
        GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      run: |
        git config --global user.name "${GIT_USER_NAME}"
        git config --global user.email "${GIT_USER_EMAIL}"

        # Ensure we are in the correct repo directory
        cd $GITHUB_WORKSPACE

        # Add boundary conditions result files if they exist
        if ls data/testing-input-output/boundary_conditions.json 1> /dev/null 2>&1; then
          git add data/testing-input-output/boundary_conditions.json
          git status
          
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit!"
          else
            git commit -m "Auto-update: Added latest boundary conditions calculation result"
            git push origin HEAD
          fi
        else
          echo "‚ùå No boundary conditions result file detected, skipping commit."
        fi
