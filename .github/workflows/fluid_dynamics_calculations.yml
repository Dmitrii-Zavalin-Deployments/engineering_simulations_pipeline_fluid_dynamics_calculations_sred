name: Fluid Dynamics Calculations Pipeline

on:
  push:
    branches:
      - "**" # Triggers on any branch
  workflow_dispatch:

jobs:
  fluid_dynamics_calculations:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install Dependencies
      run: pip install -r requirements.txt

    # --- REMOVE OR COMMENT OUT THIS BLOCK ---
    # - name: Delete Previous Boundary Conditions Output
    #   run: |
    #     if [ -f data/testing-input-output/boundary_conditions.json ]; then
    #       rm data/testing-input-output/boundary_conditions.json
    #       echo "üóëÔ∏è Deleted previous boundary_conditions.json file."
    #     else
    #       echo "‚ÑπÔ∏è No previous boundary_conditions.json found‚Äîproceeding with new calculations."
    #     fi
    #   working-directory: ${{ github.workspace }}
    # ----------------------------------------

    # Keep this, as it's useful for debugging and checking the input file
    - name: Read Input Data (Verify existence)
      run: cat data/testing-input-output/boundary_conditions.json
      working-directory: ${{ github.workspace }}

    - name: Run Fluid Dynamics Calculations
      run: python src/process_fluid_dynamics.py data/testing-input-output/boundary_conditions.json data/testing-input-output/simulation_results.json
      # ^^^ You NEED an output file name here ^^^
      # I've used 'simulation_results.json' as a logical placeholder for the output.
      # You MUST decide what the output file should be called.
      # Your script receives two arguments: input_file_path and output_file_path.
      working-directory: ${{ github.workspace }}

    - name: Verify Output File Exists
      run: |
        if [ -f data/testing-input-output/simulation_results.json ]; then # <-- CHECK FOR THE NEW OUTPUT FILE
          echo "‚úÖ Fluid dynamics simulation output successfully created."
        else
          echo "‚ùå Error: Fluid dynamics simulation output file not found!" && exit 1
        fi
      working-directory: ${{ github.workspace }}

    # ‚úÖ Run Unit & Integration Tests Separately (Paths are good with working-directory)
    - name: Run unit tests
      run: pytest tests/test_unit_validation.py --verbose
      working-directory: ${{ github.workspace }}

    - name: Run output validation tests
      run: pytest tests/test_output_validation.py --verbose
      working-directory: ${{ github.workspace }}

    - name: Run integration tests
      run: pytest tests/test_integration_validation.py --verbose
      working-directory: ${{ github.workspace }}

    - name: Run performance tests
      run: pytest tests/test_performance_testing.py --verbose
      working-directory: ${{ github.workspace }}

    # ‚úÖ Commit and Push Updated Boundary Conditions Output (Only If Tests Passed)
    - name: Commit and Push Simulation Results JSON
      env:
        GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
        GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      run: |
        git config --global user.name "${GIT_USER_NAME}"
        git config --global user.email "${GIT_USER_EMAIL}"

        cd "$GITHUB_WORKSPACE" # Use quotes for best practice

        # Add simulation result files if they exist
        if ls data/testing-input-output/simulation_results.json 1> /dev/null 2>&1; then # <-- CHECK FOR THE NEW OUTPUT FILE
          git add data/testing-input-output/simulation_results.json # <-- ADD THE NEW OUTPUT FILE
          git status

          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit!"
          else
            git commit -m "Auto-update: Added latest fluid dynamics simulation result" # <-- Update commit message
            git push origin HEAD
          fi
        else
          echo "‚ùå No simulation result file detected, skipping commit."
        fi
      working-directory: ${{ github.workspace }}
